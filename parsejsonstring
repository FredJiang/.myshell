#!/usr/bin/env node

const stringify = require('json-stable-stringify');
const { execSync } = require('child_process');
const fs = require('fs');

const tmpFilePath = '/tmp/myshell.' + process.argv[1].split('/').pop();

const getDataFromFirstArgvOrPbpaste = (process) => {
  let finalParam = '';
  if (process.argv.length === 2) {
    finalParam = execSync(`pbpaste`).toString();
  } else {
    finalParam = process.argv[2];
  }
  return finalParam;
};

let jsonString = getDataFromFirstArgvOrPbpaste(process);
// jsonString = '{"code": 0, "message": "", "result": {"domains": ["https://user.sdk.perfectworld.com", "https://user.sdk.haitun.com"], "loginTypes": ["GUEST", "FACEBOOK", "GOOGLEPLAY"], "languages": ["zh", "zh-TW"], "privacyItems": [{"content": "登陆即表示同意"}, {"content": "《用户协议》", "type": "protocol"}, {"content": "和"}, {"content": "《隐私政策》", "type": "privacy"} ] } }';
// 

// parsejsonstring

// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color

// let Reset = '\x1b[0m';
// let Bright = '\x1b[1m';
// let Dim = '\x1b[2m';
// let Underscore = '\x1b[4m';
// let Blink = '\x1b[5m';
// let Reverse = '\x1b[7m';
// let Hidden = '\x1b[8m';

// let FgBlack = '\x1b[30m';
// let FgRed = '\x1b[31m';
// let FgGreen = '\x1b[32m';
// let FgYellow = '\x1b[33m';
// let FgBlue = '\x1b[34m';
// let FgMagenta = '\x1b[35m';
// let FgCyan = '\x1b[36m';
// let FgWhite = '\x1b[37m';

// let BgBlack = '\x1b[40m';
// let BgRed = '\x1b[41m';
// let BgGreen = '\x1b[42m';
// let BgYellow = '\x1b[43m';
// let BgBlue = '\x1b[44m';
// let BgMagenta = '\x1b[45m';
// let BgCyan = '\x1b[46m';
// let BgWhite = '\x1b[47m';

let jsonData = JSON.parse(jsonString);
if (typeof jsonData === 'string' || jsonData instanceof String) {
  jsonData = JSON.parse(jsonData);
}

let stringifyResult = stringify(jsonData, { space: '  ' });
stringifyResult = `'use strict'
let tmp =
${stringifyResult}
console.log(tmp)
`;

// console.log(FgGreen);
fs.writeFileSync(tmpFilePath, stringifyResult);
execSync(`eslint --fix --config $HOME/.eslintrc_parsejsonstring ${tmpFilePath}`).toString();
stringifyResult = fs.readFileSync(tmpFilePath).toString();
let stringifyResultLines = stringifyResult.split('\n');
stringifyResultLines.shift();
stringifyResultLines.shift();
stringifyResultLines.pop();
stringifyResultLines.pop();
console.log(stringifyResultLines.join('\n'));
// console.log(Reset);
